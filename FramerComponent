// Welcome to Code in Framer
// Get Started: https://www.framer.com/docs/guides/

import { addPropertyControls, ControlType } from "framer"
import React from "react"

const predefinedIcons = {
	add: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 12V4M12 12V20M12 12H20M12 12H4" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,
	add_bold: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 12V4M12 12V20M12 12H20M12 12H4" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,
	add_fill: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M0.608964 4.93853C0 6.4087 0 8.27247 0 12C0 15.7275 0 17.5913 0.608964 19.0615C1.42092 21.0217 2.97831 22.5791 4.93853 23.391C6.4087 24 8.27247 24 12 24C15.7275 24 17.5913 24 19.0615 23.391C21.0217 22.5791 22.5791 21.0217 23.391 19.0615C24 17.5913 24 15.7275 24 12C24 8.27247 24 6.4087 23.391 4.93853C22.5791 2.97831 21.0217 1.42092 19.0615 0.608964C17.5913 0 15.7275 0 12 0C8.27247 0 6.4087 0 4.93853 0.608964C2.97831 1.42092 1.42092 2.97831 0.608964 4.93853ZM12.75 7C12.75 6.58579 12.4142 6.25 12 6.25C11.5858 6.25 11.25 6.58579 11.25 7V11.25H7C6.58579 11.25 6.25 11.5858 6.25 12C6.25 12.4142 6.58579 12.75 7 12.75H11.25V17C11.25 17.4142 11.5858 17.75 12 17.75C12.4142 17.75 12.75 17.4142 12.75 17V12.75H17C17.4142 12.75 17.75 12.4142 17.75 12C17.75 11.5858 17.4142 11.25 17 11.25H12.75V7Z" fill="black"/>
</svg>
`,
	add_fill_bold: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M0.608964 4.93853C0 6.4087 0 8.27247 0 12C0 15.7275 0 17.5913 0.608964 19.0615C1.42092 21.0217 2.97831 22.5791 4.93853 23.391C6.4087 24 8.27247 24 12 24C15.7275 24 17.5913 24 19.0615 23.391C21.0217 22.5791 22.5791 21.0217 23.391 19.0615C24 17.5913 24 15.7275 24 12C24 8.27247 24 6.4087 23.391 4.93853C22.5791 2.97831 21.0217 1.42092 19.0615 0.608964C17.5913 0 15.7275 0 12 0C8.27247 0 6.4087 0 4.93853 0.608964C2.97831 1.42092 1.42092 2.97831 0.608964 4.93853ZM13 7C13 6.44772 12.5523 6 12 6C11.4477 6 11 6.44772 11 7V11H7C6.44772 11 6 11.4477 6 12C6 12.5523 6.44772 13 7 13H11V17C11 17.5523 11.4477 18 12 18C12.5523 18 13 17.5523 13 17V13H17C17.5523 13 18 12.5523 18 12C18 11.4477 17.5523 11 17 11H13V7Z" fill="black"/>
</svg>
`,
	add_fill_light: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M0.608964 4.93853C0 6.4087 0 8.27247 0 12C0 15.7275 0 17.5913 0.608964 19.0615C1.42092 21.0217 2.97831 22.5791 4.93853 23.391C6.4087 24 8.27247 24 12 24C15.7275 24 17.5913 24 19.0615 23.391C21.0217 22.5791 22.5791 21.0217 23.391 19.0615C24 17.5913 24 15.7275 24 12C24 8.27247 24 6.4087 23.391 4.93853C22.5791 2.97831 21.0217 1.42092 19.0615 0.608964C17.5913 0 15.7275 0 12 0C8.27247 0 6.4087 0 4.93853 0.608964C2.97831 1.42092 1.42092 2.97831 0.608964 4.93853ZM12.5 7C12.5 6.72386 12.2761 6.5 12 6.5C11.7239 6.5 11.5 6.72386 11.5 7V11.5H7C6.72386 11.5 6.5 11.7239 6.5 12C6.5 12.2761 6.72386 12.5 7 12.5H11.5V17C11.5 17.2761 11.7239 17.5 12 17.5C12.2761 17.5 12.5 17.2761 12.5 17V12.5H17C17.2761 12.5 17.5 12.2761 17.5 12C17.5 11.7239 17.2761 11.5 17 11.5H12.5V7Z" fill="black"/>
</svg>
`,
	add_light: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 12V4M12 12V20M12 12H20M12 12H4" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,
}

function formatIconName(iconName) {
	const cleanedName = iconName.replace(/(_fill|_light|_bold)/g, "")
	const words = cleanedName.split("_")
	const capitalizedWords = words.map(
		(word) => word.charAt(0).toUpperCase() + word.slice(1)
	)
	return capitalizedWords.join(" ")
}

function TheSymbolsEssentials(props) {
	const {
		iconName,
		svgCode,
		color,
		withFill,
		iconWeight,
		roundedStroke,
		iconSize,
	} = props

	const strokeLinecap = roundedStroke ? "round" : "square"
	const strokeLinejoin = roundedStroke ? "round" : "mitter"

	const baseSize = 24
	const scale = iconSize / baseSize

	const weightPrefix =
		iconWeight === "light" ? "_light" : iconWeight === "bold" ? "_bold" : ""

	const fillSuffix = withFill ? "_fill" : ""

	const iconToRender = `${iconName}${fillSuffix}${weightPrefix}`

	const iconSvgCode =
		iconToRender && predefinedIcons[iconToRender]
			? predefinedIcons[iconToRender]
			: svgCode

	const updatedSvgCode = iconSvgCode
		.replace(/fill="((?!none).+?)"/g, `fill="currentColor"`)
		.replace(
			/(?<!stroke=")stroke="(?!white)(.*?)"/g,
			`stroke="currentColor"`
		)
		.replace(/stroke-linecap="(.*?)"/g, `stroke-linecap="${strokeLinecap}"`)
		.replace(
			/stroke-linejoin="(.*?)"/g,
			`stroke-linejoin="${strokeLinejoin}"`
		)
		.replace(/<svg /g, `<svg transform="scale(${scale})" `)

	console.log("updatedSvgCode:", updatedSvgCode)
	return (
		<div
			style={{
				width: iconSize,
				height: iconSize,
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				overflow: "hidden",
				color: color,
			}}
			dangerouslySetInnerHTML={{ __html: updatedSvgCode }}
		/>
	)
}

// Adding property controls to the component
addPropertyControls(TheSymbolsEssentials, {
	iconName: {
		title: "Icon",
		type: ControlType.Enum,
		options: [
			"none",
			...Object.keys(predefinedIcons).filter(
				(key) =>
					!key.includes("_fill") &&
					!key.includes("_bold") &&
					!key.includes("_light")
			),
		],
		optionTitles: [
			"None",
			...Object.keys(predefinedIcons)
				.filter(
					(key) =>
						!key.includes("_fill") &&
						!key.includes("_bold") &&
						!key.includes("_light")
				)
				.map((key) => formatIconName(key)),
		],
		defaultValue: "check",
	},

	iconWeight: {
		title: "Weight",
		type: ControlType.Enum,
		options: ["light", "regular", "bold"],
		optionTitles: ["Light", "Regular", "Bold"],
		defaultValue: "light",
	},
	withFill: {
		title: "Fill",
		type: ControlType.Boolean,
		defaultValue: true,
	},

	roundedStroke: {
		title: "Rounded Stroke",
		type: ControlType.Boolean,
		defaultValue: true,
	},

	color: {
		title: "Color",
		type: ControlType.Color,
		defaultValue: "black",
	},

	iconSize: {
		title: "Size",
		type: ControlType.Number,
		defaultValue: 24,
		min: 1,
		step: 1,
	},
})

export default TheSymbolsEssentials
